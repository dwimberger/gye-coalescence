//@license@
package mx.unam.ecologia.gye.coalescence.model;

import mx.unam.ecologia.gye.util.HaplotypeFreqSet;

import java.util.List;

/**
 * Defines the contract for analysis classes.
 * <p/>
 *
 * @author Dieter Wimberger (wimpi)
 * @version @version@ (@date@)
 */
public interface Analysis {

  /**
   * Adds a sample configuration generated by the
   * coalescent algorithm.
   * <p/>
   * Adding the sample should calculate analysis related values
   * and store them for each sample.
   *
   * @param leaves the list of leaves.
   */
  public void addSample(List leaves);

  /**
   * Calculates basic statistics using all samples and
   * returns the values.
   * </p>
   * Note that the order is defined by the implementation,
   * and implicit.
   *
   * @return basic statistics of calculated values like sample mean and variance.
   */
  public double[] getStats();

  /**
   * Returns the CSV Header describing the statistics.
   *
   * @return the CSV header as String.
   */
  public String getCSVHeader();

  /**
   * Returns the basic statistics as CSV entry row.
   *
   * @return the basic statistics as CSV entry row.
   */
  public String statsToCSV();

  /**
   * Return the haplotypes of the run as {@link HaplotypeFreqSet}.
   *
   * @param b true if multilocus, false otherwise.
   * @return the set of haplotypes with their frequencies.
   */
  public HaplotypeFreqSet getRunHaplotypes(boolean b);

}//interface Analysis
